The command and args fields in Kubernetes Pod YAML files specify the command to be run in the container and any 
additional arguments to be passed to the command, respectively. The command field corresponds to the ENTRYPOINT 
instruction in a Dockerfile, while the args field corresponds to the CMD instruction. By specifying these fields,
you can customize the command and arguments that are executed in the container, giving you flexibility to run 
any command in the container.

This readme file provides information and practical examples regarding the usage of commands and arguments in Kubernetes.

Create a Pod with Commands and Arguments
To create a pod named demo-pod with the Debian image and use the printenv HOSTNAME command:
# kubectl run demo-pod --image=debian --command -- printenv HOSTNAME
Apply YAML File and Checking Pod Status

To apply a YAML file and check the status of the pod:
# kubectl apply -f your-file.yaml
# kubectl get pod -o wide

Verify Hostname in Pod Logs
To verify the hostname is printed in the logs of a pod, use the following commands:
# kubectl logs demo-pod


apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  containers:
  - name: my-container
    image: my-image
    command: ["echo", "Hello"]
    args: ["world"]
