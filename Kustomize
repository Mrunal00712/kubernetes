mysql-deployment.yml

apiVersion: v1
kind: Service
metadata: 
  name: wordpress-mysql
  labels:
    app: wordpress
spec:
  ports:
    - port: 3306
  selector:
    app: wordpress
    tier:  mysql
  clusterOP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: appa/v1   # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: wordpress-mysql
  labels:
    app:  wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      containers:
      -  image: mysql:5.6
         name: mysql
         env:
         - name:  MYSQL_ROOT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: mysql-pass
               key: password
         ports:
         -  containerPort: 3306
            name: mysql
         volumeMounts:
         -  name: mysql-persistent-storage
            persistentVolumeClaim:
              claimName: mysql-pv-claim
    
***************************************************************************************
wordpress-deployment.yml

apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  ports:
  - port: 80
  selector:
    app: wordpress
    tier: frontend
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resorces:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1  # for versions before 1.9.0  use apps/v1beta2
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app:  wordpress
      tier:  frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
  spec:
    containers:
    - image: wordpress:4.8-apache
      name: wordpress
      env:
      - name: WORDPRESS_DB_HOST
        value: wordpress-mysql
      - name: WORDPRESS_DB_PASSWORD
        valueFrom:
          secretkeyRef:
            name: mysql-pass
            key: password
      ports:
      - containerPort: 80
        name: wordpress
      volumeMounts:
      - name: wordpress-persistent-storage
        mountPath: /var/www/html
  volumes:
  - name: wordpress-persistent-storage
    persistentVolumeClaim:
      claimName: wp-pv-claim

***************************************************************************************************************************
kustomization.yml

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
secretGenerator:
- name: mysql-pass
  literals:
  - password=redhat
resources:
  - mysql-deployment.yaml
  - wordpress-deployment.yaml
*************************************************************************************************************************
# kubectl delete all -all
# kubectl ceate -h
# kubectl create -k  .  
# kubectl get svc
# kubctl get deploy
# kubctl get rs
# kubectl get secrets
# kubect get pvc
# kubectl get pv
# kubectl get svc
# minikube ip
URL
# kubectl get po
# kubectl delete pod wordpress-vbgvhubijn
// as soon as the pod delete new pod started
# kubectl get po 
# kubectl scale deploy wordpress --replicas=3
